<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd">

    <!--自动扫描包-->
    <context:component-scan base-package="com.vectorx.springmvc"></context:component-scan>

    <!--配置Thymeleaf视图解析器-->
    <bean id="viewResolver" class="org.thymeleaf.spring5.view.ThymeleafViewResolver">
        <property name="order" value="1"/>
        <property name="characterEncoding" value="UTF-8"/>
        <property name="templateEngine">
            <bean class="org.thymeleaf.spring5.SpringTemplateEngine">
                <property name="templateResolver">
                    <bean class="org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver">
                        <!--视图前缀-->
                        <property name="prefix" value="/WEB-INF/templates/"/>
                        <!--视图后缀-->
                        <property name="suffix" value=".html"/>
                        <property name="templateMode" value="HTML5"/>
                        <property name="characterEncoding" value="UTF-8"/>
                    </bean>
                </property>
            </bean>
        </property>
    </bean>

    <!--InternalResourceViewResolver-->
    <!--<bean id="InternalResourceViewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">-->
    <!--    <property name="prefix" value="/WEB-INF/templates/"/>-->
    <!--    <property name="suffix" value=".jsp"/>-->
    <!--</bean>-->

    <!--视图控制器：当前请求映射对应的控制器方法中没有其他请求过程的处理，只需设置一个视图名称时，就可以使用`view-controller`-->
    <mvc:view-controller path="/" view-name="index"></mvc:view-controller>
    <mvc:view-controller path="/view" view-name="view"></mvc:view-controller>
    <mvc:view-controller path="/restful" view-name="restful"></mvc:view-controller>
    <mvc:view-controller path="/httpmessageconverter" view-name="httpmessageconverter"></mvc:view-controller>
    <mvc:view-controller path="/fileuploaddownload" view-name="fileuploaddownload"></mvc:view-controller>
    <mvc:view-controller path="/interceptor" view-name="interceptor"></mvc:view-controller>

    <!--处理静态资源-->
    <mvc:default-servlet-handler/>

    <!--当SpringMVC中设置任何一个view-controller时，其他控制器中的请求映射将全部失效，此时需要在SpringMVC的核心配置文件中设置开启mvc注解驱动的标签：-->
    <!--开启 MVC 的注解驱动-->
    <mvc:annotation-driven/>

    <!--配置文件上传解析器，将上传文件自动封装为MutilpartFile对象-->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver"></bean>

    <!--自定义拦截器-->
    <!--<mvc:interceptors>-->
    <!--    <bean id="myInterceptor" class="com.vectorx.springmvc.s00_helloworld.interceptor.MyInterceptor"></bean>-->
    <!--</mvc:interceptors>-->
    <!--<mvc:interceptors>-->
    <!--    <ref bean="myInterceptor"></ref>-->
    <!--</mvc:interceptors>-->
    <!--<mvc:interceptors>-->
    <!--    <mvc:interceptor>-->
    <!--        <mvc:mapping path="/**"/>-->
    <!--        <mvc:exclude-mapping path="/"/>-->
    <!--        <ref bean="myInterceptor"></ref>-->
    <!--    </mvc:interceptor>-->
    <!--</mvc:interceptors>-->
    <!--<mvc:interceptors>-->
    <!--    <ref bean="myInterceptor"></ref>-->
    <!--    <ref bean="myInterceptor2"></ref>-->
    <!--</mvc:interceptors>-->

    <!--<bean id="simpleMappingExceptionResolver"-->
    <!--      class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">-->
    <!--    <property name="exceptionMappings">-->
    <!--        <props>-->
    <!--            &lt;!&ndash;-->
    <!--                properties的键表示处理器方法执行过程中出现的异常-->
    <!--                properties的值表示若出现指定异常，设置一个新的视图名称，跳转到指定页面-->
    <!--            &ndash;&gt;-->
    <!--            <prop key="java.lang.ArithmeticException">error</prop>-->
    <!--        </props>-->
    <!--    </property>-->
    <!--    &lt;!&ndash;设置一个属性名，将出现的异常信息共享在请求域中&ndash;&gt;-->
    <!--    <property name="exceptionAttribute" value="ex"></property>-->
    <!--</bean>-->
</beans>